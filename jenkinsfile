pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID = "368355641188"
        AWS_DEFAULT_REGION = "us-east-1"
        IMAGE_REPO_NAME = "spring-app"
        IMAGE_TAG = "${env.BUILD_NUMBER}"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
        TASK_DEFN_FAMILY = "spring-task-ec2"
    }

    stages {
        stage('Logging into AWS ECR') {
            steps {
                script {
                    sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 368355641188.dkr.ecr.us-east-1.amazonaws.com"
                }
            }
        }
        stage('Cloning Git') {
            steps {
                checkout scmGit(branches: [[name: '*/docker-ecs']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/anantya-ncompass/java-docker.git']])
            }
        }
        stage('Building Image') {
            steps {
                script {
                    dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                }
            }
        }
        stage('Pushing to ECR') {
            steps {
                script {
                    sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:${IMAGE_TAG}"
                    sh "docker push ${REPOSITORY_URI}:${IMAGE_TAG}"
                }
            }
        }
        stage('changing tag value in container_defn.json') {
            steps {
                script {
                    sh '''
                    sed -i "s/tag_value/${BUILD_NUMBER}/g" ./container_defn.json
                    '''
                }
            }
        }
        stage('Creating new task definition') {
            steps {
                script {
                    sh "aws ecs register-task-definition --family ${TASK_DEFN_FAMILY} --cli-input-json file://./container_defn.json --region ${AWS_DEFAULT_REGION}"
                    sh "aws ecs list-task-definitions"
                }
            }
        }
//         stage('Creating new service') {
//             steps {
//                 script {
//                     sh '''
//                         aws ecs create-service \
//                         --cluster ram-cluster \
//                         --service-name ram-service-1 \
//                         --task-definition ${TASK_DEFN_FAMILY} \
//                         --desired-count 2 \
//                         --launch-type FARGATE \
//                         --network-configuration "awsvpcConfiguration={subnets=[subnet-0118731e1e83e6e25], securityGroups=[sg-07f44ee2255d597e3]}" \
//                         --region ap-southeast-2
//                     '''
//                 }
//             }
//         }
    }
}